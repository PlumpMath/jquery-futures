// Generated by CoffeeScript 1.7.1
(function() {
  var __slice = [].slice;

  $.mapProm = function(prom, fn) {
    var d;
    d = $.Deferred();
    prom.done(function() {
      var results;
      results = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      d.resolve.call(d, fn.apply(null, results));
    });
    return d.promise();
  };

  $.flatMap = function(promise, f) {
    var deferred;
    deferred = $.Deferred();
    promise.then(function() {
      var newPromise, results;
      results = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      newPromise = f.apply(null, results);
      return newPromise.then(function() {
        var otherResults;
        otherResults = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        return deferred.resolve.apply(deferred, otherResults);
      });
    });
    return deferred.promise();
  };

  $.select = function(promiseArray) {
    var d, promise, resolve, _i, _len;
    d = $.Deferred();
    resolve = function(promise, promiseResult) {
      var otherPromises, p;
      otherPromises = ((function() {
        var _i, _len, _results;
        if (p !== promise) {
          _results = [];
          for (_i = 0, _len = promiseArray.length; _i < _len; _i++) {
            p = promiseArray[_i];
            _results.push(p);
          }
          return _results;
        }
      })());
      return d.resolve(promiseResult, otherPromises);
    };
    for (_i = 0, _len = promiseArray.length; _i < _len; _i++) {
      promise = promiseArray[_i];
      promise.done(_.partial(resolve, promise));
    }
    return d.promise();
  };

  $.join = $.when;

  $.collect = function(promiseArray) {
    return $.when.apply($, promiseArray);
  };

}).call(this);
